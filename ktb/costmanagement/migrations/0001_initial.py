# Generated by Django 2.0 on 2018-12-27 04:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Additives',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(max_length=255)),
                ('product', models.CharField(max_length=255)),
                ('netBlendingQtyLiter', models.FloatField()),
                ('grossVolCrosscheck', models.FloatField()),
                ('percentCrosscheck', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='AdditivesBaseOil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('qtyInPercent', models.FloatField()),
                ('qtyInLiters', models.FloatField()),
                ('density', models.FloatField()),
                ('qtyInKgs', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='AdditivesPolymer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('qtyInPercent', models.FloatField()),
                ('qtyInLiters', models.FloatField()),
                ('density', models.FloatField()),
                ('qtyInKgs', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='AdditivesRaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.CharField(max_length=255)),
                ('importRate', models.FloatField()),
                ('addCost', models.FloatField()),
                ('total', models.FloatField()),
                ('mtToKl', models.FloatField()),
                ('usage', models.FloatField()),
                ('netCost', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Blending',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.IntegerField()),
                ('product', models.CharField(max_length=255)),
                ('grade', models.CharField(max_length=255)),
                ('sae', models.CharField(max_length=255)),
                ('percentCrosscheck', models.FloatField()),
                ('perLiterCost', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='BlendingAdditive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('QtyInPercent', models.FloatField()),
                ('QtyInLiters', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='BlendingBaseOil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('QtyInPercent', models.FloatField()),
                ('QtyInLiters', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Consumption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.CharField(max_length=255)),
                ('grade', models.CharField(max_length=255)),
                ('sae', models.CharField(max_length=255)),
                ('netBlendingQty', models.FloatField()),
                ('grossVolCrosscheck', models.FloatField()),
                ('crosscheck', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='ConsumptionAdditive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('QtyInPercent', models.FloatField()),
                ('QtyInLiters', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='ConsumptionBaseOil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('QtyInPercent', models.FloatField()),
                ('QtyInLiters', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='FinalProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.IntegerField()),
                ('product', models.CharField(max_length=255)),
                ('sae', models.CharField(max_length=255)),
                ('totalQty', models.FloatField()),
                ('perLiterCost', models.FloatField()),
                ('costBlendDk', models.FloatField()),
                ('totalCost', models.FloatField()),
                ('literValue', models.FloatField()),
                ('costPer200', models.FloatField()),
                ('costPerDrum', models.FloatField()),
                ('netCostExDk', models.FloatField()),
                ('valueNet', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.IntegerField()),
                ('product', models.CharField(max_length=255)),
                ('dkSupply', models.CharField(max_length=255)),
                ('ksSupply', models.CharField(max_length=255)),
                ('perLiterPrice', models.FloatField()),
                ('valueDk', models.CharField(max_length=255)),
                ('valueKs', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Packing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.IntegerField()),
                ('product', models.CharField(max_length=255)),
                ('pereach', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='RawMaterials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.CharField(max_length=255)),
                ('costPerLiter', models.FloatField()),
                ('buyPricePmt', models.FloatField()),
                ('addCost', models.FloatField()),
                ('total', models.FloatField()),
                ('mlToKl', models.FloatField()),
                ('density', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='SnFinalProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SnInventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SnPacking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.IntegerField()),
            ],
        ),
        migrations.AddField(
            model_name='consumption',
            name='additives',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costmanagement.ConsumptionAdditive'),
        ),
        migrations.AddField(
            model_name='consumption',
            name='baseoils',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costmanagement.ConsumptionBaseOil'),
        ),
        migrations.AddField(
            model_name='blending',
            name='additives',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costmanagement.BlendingAdditive'),
        ),
        migrations.AddField(
            model_name='blending',
            name='baseoils',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costmanagement.BlendingBaseOil'),
        ),
    ]
